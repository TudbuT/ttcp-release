package de.tudbut.mod.client.ttcp.mods.exploit;

import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketKeepAlive;
import net.minecraft.network.status.client.CPacketPing;
import de.tudbut.mod.client.ttcp.TTCp;
import de.tudbut.mod.client.ttcp.utils.Module;
import de.tudbut.mod.client.ttcp.utils.Setting;
import de.tudbut.mod.client.ttcp.utils.Utils;
import de.tudbut.mod.client.ttcp.utils.category.Exploit;
import de.tudbut.obj.Save;

import java.util.ArrayList;
import java.util.Date;

@Exploit
public class Ping extends Module {
    
    @Save
    int time = 1;
    
    @Override
    public void updateBinds() {
        subComponents.clear();
        subComponents.add(Setting.createInt(0, 10, "Pings", this, "time"));
    }
    
    ArrayList<Packet<?>> processed = new ArrayList<>();
    
    @Override
    public boolean onPacket(Packet<?> packet) {
        if(packet instanceof CPacketPing)
            Utils.setPrivateField(CPacketPing.class, packet, Utils.getFieldsForType(CPacketPing.class, long.class)[0], new Date().getTime() - time * 1000L);
        if(packet instanceof CPacketKeepAlive) {
            if(!processed.contains(packet)) {
                processed.add(packet);
                new Thread(() -> {
                    try {
                        Thread.sleep(time * 1000L/* - (System.currentTimeMillis() - ((CPacketKeepAlive) packet).getKey())*2*/);
                    }
                    catch (Exception ignored) {
                    }
                    TTCp.player.connection.sendPacket(packet);
                }).start();
                return true;
            }
        }
        return false;
    }
}
